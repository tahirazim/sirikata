diff -r -u raknet/Source/DS_Map.h raknet_fix/Source/DS_Map.h
--- raknet/Source/DS_Map.h	2009-04-26 20:39:11.000000000 -0700
+++ raknet_fix/Source/DS_Map.h	2009-04-26 20:22:46.000000000 -0700
@@ -29,6 +29,17 @@
 		if (a<b) return -1; if (a==b) return 0; return 1;
 	}
 
+	// Has to be a static because the comparison callback for DataStructures::OrderedList is a C function
+	template <class key_type, class map_node_type, int (*key_comparison_func)(const key_type&, const key_type&) >
+	int NodeComparisonFunc(const key_type &a, const map_node_type &b)
+	{
+#ifdef _MSC_VER
+#pragma warning( disable : 4127 ) // warning C4127: conditional expression is constant
+#endif
+		return key_comparison_func(a, b.mapNodeKey);
+	}
+
+
 	/// \note IMPORTANT! If you use defaultMapKeyComparison then call IMPLEMENT_DEFAULT_COMPARISON or you will get an unresolved external linker error.
 	template <class key_type, class data_type, int (*key_comparison_func)(const key_type&, const key_type&)=defaultMapKeyComparison<key_type> >
 	class RAK_DLL_EXPORT Map
@@ -46,15 +57,6 @@
 			data_type mapNodeData;
 		};
 
-		// Has to be a static because the comparison callback for DataStructures::OrderedList is a C function
-		static int NodeComparisonFunc(const key_type &a, const MapNode &b)
-		{
-#ifdef _MSC_VER
-#pragma warning( disable : 4127 ) // warning C4127: conditional expression is constant
-#endif
-			return key_comparison_func(a, b.mapNodeKey);
-		}
-
 		Map();
 		~Map();
 		Map( const Map& original_copy );
@@ -78,7 +80,7 @@
 		unsigned Size(void) const;
 
 	protected:
-		DataStructures::OrderedList< key_type,MapNode,Map::NodeComparisonFunc > mapNodeList;
+		DataStructures::OrderedList< key_type,MapNode, NodeComparisonFunc<key_type,MapNode,key_comparison_func> > mapNodeList;
 
 		void SaveLastSearch(const key_type &key, unsigned index) const;
 		bool HasSavedSearchResult(const key_type &key) const;
