/*  CBR
 *  Prox.pbj
 *
 *  Copyright (c) 2009, Ewen Cheslack-Postava
 *  All rights reserved.
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions are
 *  met:
 *  * Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *  * Neither the name of Sirikata nor the names of its contributors may
 *    be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 * IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
 * OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

"pbj-0.0.3"

import "Loc.pbj";
import "Prox.pbj";

package Sirikata.Protocol.MasterPinto;


// --- From Space Server to Pinto

// RegionID Update - Inform master pinto server of the space server's ID
message RegionIDUpdate {
    optional uint32 server = 1;
}

// Region Update - Inform master pinto server of region your space
// server covers
message RegionUpdate {
    optional boundingsphere3f bounds = 1;
}

// Largest Object Update - Inform master pinto server of new value for
// largest object
message LargestObjectUpdate {
    optional float radius = 1;
}

// Query Update - Inform master pinto server of update (or new)
// aggregated query information.
message QueryUpdate {
    optional float min_angle = 1;
    optional int32 max_count = 2;
}

// Message to Pinto - May include Region, Max
message PintoMessage {
    optional RegionIDUpdate server = 1;
    optional RegionUpdate region = 2;
    optional LargestObjectUpdate largest = 3;

    // Removed. Do not use. Maintained so the field number is not reused.
    //optional QueryUpdate query = 4;

    // Query update/command. bytes so that it can be of any form,
    // e.g. solid angle queries can be a serialized QueryUpdate
    optional bytes query = 5;
}


// --- From Pinto to Space Server


// Pinto Result - Specify addition or removal of important
message PintoResult {
    optional bool addition = 1;
    optional uint32 server = 2;
}

// "Atomic" update to pinto results
message PintoUpdate {
    repeated PintoResult change = 1;
}

message PintoResponse {
    // Query results for old master pint implementation
    repeated PintoUpdate update = 1;

    // Query results for new, manual master pinto implementation, which just
    // uses regular query results.
    optional Sirikata.Protocol.Prox.ProximityResults prox_results = 2;

    // Loc updates can apply to both of them
    optional Sirikata.Protocol.Loc.BulkLocationUpdate loc_updates = 3;
}
