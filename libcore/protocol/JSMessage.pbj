
"pbj-0.0.3"

package Sirikata.JS.Protocol;


message JSFunctionObject{
    required int32 func_id = 1;
    required string f_value = 2;
}


message JSFieldValue
{
	optional string s_value = 1;
	optional int32 i_value = 2;
        optional JSMessage o_value = 3;
        optional JSFunctionObject f_value = 4;
        optional bool b_value = 5;
	optional int32 ui_value = 6;
        optional double d_value = 7;
        optional JSMessage a_value = 8;
        // Note that loop_pointer is somewhat misleading. This really
        // just handles any objects which are pointed to more than
        // once, e.g. the same value could appear many times if it
        // points to the prototype of a common type such as vec3
        optional int32 loop_pointer = 9;
}



message JSField
{
	// every field in the original message can have three
	// attributes: 1. name 2. value 3. prototype( or type)
	// name is required while other two are optional

        required string name = 1;
	optional JSFieldValue value = 2; // could be a blank value
}

message JSMessage
{
        required int32 msg_id = 1;
	repeated JSField fields = 2;
}
